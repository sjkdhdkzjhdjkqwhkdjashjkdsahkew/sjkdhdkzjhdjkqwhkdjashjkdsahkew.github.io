<!--
 * Ancient Beast - Free Open Source Online PvP TBS: card game meets chess, with creatures.
 * Copyright (C) 2007-2014  Valentin Anastase (a.k.a. Dread Knight)
 *
 * This file is part of Ancient Beast.
 *
 * Ancient Beast is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Ancient Beast is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * https://www.AncientBeast.com
 * https://github.com/FreezingMoon/AncientBeast
 * DreadKnight@FreezingMoon.org
-->

<?php
$page_title = "Sprite Sheet Animation Viewer";
require_once("../header.php"); ?>
<script type="application/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<div class="div center">
<canvas class="center" id="kanvas" width="500" height="400" onclick="{pauseButtonPressed()}">
No canvas support.
</canvas>
</div>
<div class="div center">
<style>
.control_pane {
	text-align: left;
	float: left;
	width: 25%;
}
.control_buttons {
	list-style-type: none;
	width: 100%;
	font-size: 18px;
	font-weight: bold;
	margin: 0;
	padding: 0;
	margin-left: auto;
	margin-right: auto;

	text-align: center;
}
.control_buttons li {
	display: inline;
	padding: 25px;
}
.data_pane {
	text-align: center;
	float: left;
	width: 50%;
}
.data_out {
	width:400px;
	height:300px;
}
</style>

<div align="center">
<p class="control_pane">
<input type="text" size="10" id="textField4" value="24"> frame count<br>
<input type="text" size="10" id="textField0" value="30"> frame rate<br>
<input type="text" size="10" id="textField5" value="1"> frame step
</p>

<p class="control_pane">
<input type="text" size="10" id="textField2" value="256"> sprite width<br>
<input type="text" size="10" id="textField3" value="256"> sprite height<br>
<input type="text" size="10" id="textField10" value="3"> sprite offset
</p>

<p class="control_pane">
<input type="text" size="10" id="textField8" value="0"> X offset<br>
<input type="text" size="10" id="textField9" value="0"> Y offset<br>
<input type="text" size="10" id="textField1" value="transparent"> bg color
</p>

<p class="control_pane">
<input type="text" size="10" id="textField6" value="3"> rows<br>
<input type="text" size="10" id="textField7" value="8"> columns<br>
<input type="text" size="10" id="textField11" value=""> image
</p>
</div>

<ul class="control_buttons">
<li><button id="updateButton" onClick="{updateFields();}"> Update </button></li>
<li><button id="pauseButton" onClick="{pauseButtonPressed()}"> Pause </button></li>
<li><button id="share_link"> Copy </button></li>
<li><button id="download_link"> Save </button></li>
</ul>

<p align="center" class="data_pane">
sprite json<br>
<textarea id="JSON_out" value="" class="data_out" disabled></textarea>
</p>
<p align="center" class="data_pane">
sprite embed code<br>
<textarea id="EMBED_out" value="" class="data_out" disabled></textarea>
</p>

<script type="text/javascript" src="b64.js"></script>
<script id="code" type="text/javascript" src="beastsprite.js"></script>
<script type="text/javascript">

// now that the BeastSprite class is more modular and the viewer UI code is seperated from the actual
// sprite engine, embedding the sprite is much easier... Here's an example of embedding the sprite:
// embed the http://ancientbeast.com/viewer/beastsprite.js file once in the header to load the class definition
// have a canvas object with a unique id
// then make a new instance of BeastSprite like this:

// 	var bs1 = new BeastSprite("kanvas");

// then you can simply load the parameter JSON straight into the sprite after initialization:

//	bs1.load_json(json_string); // as a raw json string
//	bs1.load_json_file(json_file_path, load_finished_handler); // as path to json file
//	bs1.load_json_b64(base64_encoded_json); // as Base64 encoded json string (for receiving from get variables)

// then once all the parameters are loaded you need to do either one of two things
// if you loaded the json as a string (base64 or raw json), you just need to do this:

//	bs1.play();

// but if you loaded from a file, you need to write a handler function, so back to the load_json_file function call:

// 	bs1.load_json_file(json_file_path, function(this){
//		this.play(); // plays once parameters are loaded into sprite.
//	});

// and that's about it! Good luck :)
// will code an embed output for the viewer UI, to output an embed code
// the embed code generated by the viewer will have the json for the sprite base64 encoded and hard coded into
// a variable and put into the sprite as Base64, like this:

//	var bs1 = new BeastSprite("kanvas");
//	bs1.load_json_b64("eyJmcHMiOjMwLCJiY29sIjoidHJhbnNwYXJlbnQiLCJzcHJ3IjoyNTYsInNwcmgiOjI1NiwiaWNudCI6MjQsInN0ZXAiOjEsInJvd3MiOjMsImNvbHMiOjgsIml4IjowLCJpeSI6MCwib2ZmIjozfQ==");
//	bs1.play();

var site_root = "<?php echo 'http://'.$_SERVER['SERVER_NAME'].$site_root; ?>";
document.getElementById("textField11").value = site_root+"viewer/spritesheet.png";

var bs;

var embed_code_start = $('<div />').html("<?php 

	echo htmlspecialchars('<div class="beastsprite" >\n<script type="text/javascript" src="'.$site_url.'viewer/b64.js"></script>\n<script type="text/javascript" src="'.$site_url.'viewer/beastsprite.js"></script>\n<canvas width="10" height="10" id="sprite_canvas" >canvas not supported</canvas>\n<script type="text/javascript" >\nwindow.onload = function() {\n	var sprite = new BeastSprite("sprite_canvas");\n	sprite.load_json_b64("');

 ?>").text();

var embed_code_end = $('<div />').html("<?php 

	echo htmlspecialchars('");\n	sprite.loadImage(function(){\n		sprite.play();\n	});\n}\n</script>\n</div>');

 ?>").text();

function pauseButtonPressed(){
	if(bs.playing){
		bs.stop();
		document.getElementById("pauseButton").innerHTML="Play";
	} else{
		bs.play();
		document.getElementById("pauseButton").innerHTML="Pause";
	}
}

function updateFields() {	//duh, updates the values defined in index.html
	bs.framerate = parseInt(document.getElementById("textField0").value);
	bs.bgColor = document.getElementById("textField1").value;
	bs.spriteWidth = parseInt(document.getElementById("textField2").value);
	bs.spriteHeight = parseInt(document.getElementById("textField3").value);
	bs.imageCount = parseInt(document.getElementById("textField4").value);
	bs.framestep = parseInt(document.getElementById("textField5").value);
	bs.rows = parseInt(document.getElementById("textField6").value);
	bs.columns = parseInt(document.getElementById("textField7").value);
	bs.imageX = parseInt(document.getElementById("textField8").value);
	bs.imageY = parseInt(document.getElementById("textField9").value);
	bs.offset = parseInt(document.getElementById("textField10").value);
	bs.imageFile = document.getElementById("textField11").value;
	
	bs.update_json();
	document.getElementById("JSON_out").value = bs.sprite_json;
	document.getElementById("EMBED_out").value = embed_code_start+Base64.encode(bs.sprite_json)+embed_code_end;
	
	document.getElementById("download_link").innerHTML = '<a href="data:application/octet-stream;charset=utf-8;base64,'+Base64.encode(bs.sprite_json)+'">Save</a>';
	document.getElementById("share_link").innerHTML = '<a href="'+site_root+"viewer/?s="+Base64.encode(bs.sprite_json)+'" target="_blank" >Copy</a>';
	
	bs.changeCanvasSize();
	bs.loadImage(function(){
		bs.play();
	});
}

//window.onload = function(){

	bs = new BeastSprite("kanvas");
	
	var start_json = "";
	<?php if($_GET['s']){ ?>
	
		// load Base64 JSON from 's' get variable from share link and load it into viewer controls and sprite itself
		start_json = "<?php echo $_GET['s']; ?>";
		start_json = Base64.decode(start_json);
		start_json = JSON.parse(start_json);
		document.getElementById("textField0").value = start_json.fps;
		document.getElementById("textField1").value = start_json.bcol;
		document.getElementById("textField2").value = start_json.sprw;
		document.getElementById("textField3").value = start_json.sprh;
		document.getElementById("textField4").value = start_json.icnt;
		document.getElementById("textField5").value = start_json.step;
		document.getElementById("textField6").value = start_json.rows;
		document.getElementById("textField7").value = start_json.cols;
		document.getElementById("textField8").value = start_json.ix;
		document.getElementById("textField9").value = start_json.iy;
		document.getElementById("textField10").value = start_json.off;
		document.getElementById("textField11").value = start_json.img;
		bs.load_json(start_json);
		
	<?php } ?>
	
	updateFields();
	
//}

</script>

</div>
<div class="div center">If you're looking for a more advanced sprite sheet editor, you should really check out <a href="http://darkfunction.com/editor/" target="_blank"><b>darkFunction Editor</b></a>.<br>
You can use <a href="https://raw.github.com/Fweeb/blender_spritify/master/spritify.py" target="_blank" download><b>Spritify</b></a> <a href="http://blender.org" target="_blank"><b>blender</b></a> <a href="https://github.com/Fweeb/blender_spritify" target="_blank"><b>addon</b></a> to generate <a href="spritesheet.png" target="_blank"><b>sprite sheets</b></a>. Feel free to share your sprite sheets below.</div>
<?php
disqus();
include('../footer.php'); ?>
